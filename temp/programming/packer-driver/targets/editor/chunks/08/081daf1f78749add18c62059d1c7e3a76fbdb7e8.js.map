{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/tools.ts"],"names":["tools","AudioClip","error","Prefab","AudioManager","resMgr","SOUND","getRandomInt","min","max","Math","floor","random","getRandomMjIndex","randomInt","playSound","sound","start_sound","audioClip","Instance","getAsset","inst","playOneShot","level","picNum","animType","userName","userHeadspr","userRank","resPkg","prefabs","assetType","urls","getMj"],"mappings":";;;+HAeqBA,K;;;;;;;;;;;;;;;;;;;AAfLC,MAAAA,S,OAAAA,S;AAA8BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;;AAC5CC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;uBAGGC,K,0BAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;AAAAA,QAAAA,K,CAAAA,K;eAAAA,K;;;yBAUSN,K,GAAN,MAAMA,KAAN,CAAY;AA4CJ,eAAZO,YAAY,CAACC,GAAD,EAAMC,GAAN,EAAW;AAC1B,iBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAEsB,eAAhBK,gBAAgB,GAAG;AACtB,cAAIC,SAAS,GAAGd,KAAK,CAACO,YAAN,CAAmB,CAAnB,EAAsB,EAAtB,CAAhB;AACA,iBAAOO,SAAP;AACH;;AAEe,eAATC,SAAS,CAACC,KAAD,EAAQ;AACpB,cAAIA,KAAK,IAAIV,KAAK,CAACW,WAAnB,EAAgC;AAC5B,gBAAIC,SAAS,GAAG;AAAA;AAAA,kCAAOC,QAAP,CAAgBC,QAAhB,CAAyB,OAAzB,EAAkC,WAAlC,CAAhB;AACA;AAAA;AAAA,8CAAaC,IAAb,CAAkBC,WAAlB,CAA8BJ,SAA9B;AACH;AACJ,SA1DsB,CA4DvB;;;AA5DuB,O;;AAANlB,MAAAA,K,CAEVuB,K,GAAgB,C;AAAS;AAFfvB,MAAAA,K,CAGVwB,M,GAAiB,E;AAAS;AAHhBxB,MAAAA,K,CAIVyB,Q,GAAmB,C;AAAO;AAJhBzB,MAAAA,K,CAKV0B,Q,GAAW,O;AALD1B,MAAAA,K,CAMV2B,W,GAAc,I;AANJ3B,MAAAA,K,CAOV4B,Q,GAAW,M;AAPD5B,MAAAA,K,CASV6B,M,GAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,QAAAA,OAAO,EAAE;AACLC,UAAAA,SAAS,EAAE5B,MADN;AAEL6B,UAAAA,IAAI,EAAE,CACF,WADE,EAEF,QAFE,EAGF,MAHE;AAFD,SAXG;AAoBZhB,QAAAA,KAAK,EAAE;AACHe,UAAAA,SAAS,EAAE9B,SADR;AAEH+B,UAAAA,IAAI,EAAE,CACF,MADE,EAEF,OAFE,EAGF,UAHE,EAIF,WAJE,EAKF,SALE,EAMF,UANE,EAOF,MAPE,EAQF,OARE;AAFH;AApBK,O;AATChC,MAAAA,K,CA6DViC,K","sourcesContent":["import { Asset, AudioClip, Constructor, Enum, error, Prefab, resources } from \"cc\";\nimport { AudioManager } from \"./audioManager\";\nimport { resMgr } from \"./resMgr\";\nexport type AssetType<T = Asset> = Constructor<T>;\nexport type LoadCompleteCallback<T> = (error: Error | null, asset: T) => void;\nexport enum SOUND {\n    start_sound,\n    click_sound,\n    gameLost_sound,\n    gameWin_sound,\n    sendCard_sound,\n    time_sound,\n    clear_sound,\n}\n\nexport default class tools {\n\n    static level: number = 1;       //当前游戏关卡等级\n    static picNum: number = 18;      //图片数量 level * picNum\n    static animType: number = 2;     //发牌动画 1同时移动，缩放  2缩放出现\n    static userName = '磨人小妖精'\n    static userHeadspr = null;\n    static userRank = 'No.1';\n\n    static resPkg = {\n        //gui: {\n        //     assetType: SpriteFrame,\n        //     urls: [\n        //         'btn_bg/spriteFrame',\n        //         'frame/spriteFrame',\n        //         'game_bg/spriteFrame',\n        //         'mj_card/spriteFrame',\n        //     ],\n        // },\n\n        prefabs: {\n            assetType: Prefab,\n            urls: [\n                'gameStart',\n                'mjcard',\n                'game',\n            ],\n        },\n\n        sound: {\n            assetType: AudioClip,\n            urls: [\n                'back',\n                'click',\n                'gameLost',\n                'gameStart',\n                'gameWin',\n                'sendCard',\n                'time',\n                'clear',\n            ],\n        },\n    };\n\n    static getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    static getRandomMjIndex() {\n        let randomInt = tools.getRandomInt(1, 34);\n        return randomInt;\n    }\n\n    static playSound(sound) {\n        if (sound == SOUND.start_sound) {\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameStart');\n            AudioManager.inst.playOneShot(audioClip);\n        }\n    }\n\n    //获取麻将\n    static getMj\n}"]}