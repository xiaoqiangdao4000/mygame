{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/mjcard.ts"],"names":["_decorator","Color","Component","Node","Sprite","tween","Vec3","ccclass","property","mjcard","_interaction","scale","moveDuration","scaleDuration","levelPos1","start","node","on","EventType","TOUCH_START","onTouchStart","interaction","v","normalColor","fromHEX","grayColor","sprite","color","initMj","num","spriteFrame","animType","callback","name","playAnimation","x","getRandomInt","y","setPosition","setScale","t1","to","position","t2","t3","parallel","t4","call","sequence","event","console","log","target","parent","emit","update","deltaTime","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, EventTouch, Node, Sprite, tween, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n@ccclass('mjcard')\nexport class mjcard extends Component {\n\n    @property(Sprite)\n    sprite: Sprite;\n\n    private _interaction = true;\n\n    scale = 1.5;\n    moveDuration = 0.5;\n    scaleDuration = 0.5;\n\n    levelPos1: number[][] = [\n        [1, 2],\n        [3, 4],\n        [5, 6]\n    ];\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    }\n\n    public get interaction() { return this._interaction; }\n    public set interaction(v: boolean) {\n        this._interaction = v;\n        let normalColor = new Color();\n        normalColor.fromHEX('#FFFFFF');\n        let grayColor = new Color();\n        grayColor.fromHEX('#AC8D8D');\n        this.sprite.color = v ? normalColor : grayColor;\n    }\n\n    initMj(num, spriteFrame, animType, callback) {\n        this.node.name = 'mj_' + num;\n        this.sprite.spriteFrame = spriteFrame;\n        this._interaction = true;\n        this.playAnimation(animType, callback);\n    }\n\n    //播放发牌动画\n    playAnimation(animType, callback) {\n        var x = this.getRandomInt(-300, 300);\n        var y = this.getRandomInt(-200, 400);\n        this.node.setPosition(0, 0);\n        this.node.setScale(0, 0);\n        //同事移动，缩放\n        if (animType == 1) {\n            let t1 = tween(this.node).to(this.moveDuration, { position: new Vec3(x, y, 0) })\n            let t2 = tween(this.node).to(this.moveDuration, { scale: new Vec3(this.scale, this.scale, 1) })\n            let t3 = tween(this.node).parallel(t1, t2);\n            let t4 = tween(this.node).call(() => {\n                callback();\n            });\n            tween(this.node).sequence(t3, t4).start();\n            //tween(this.node).parallel(t1, t2).start();\n            return;\n        }\n        else if (animType == 2)  //设置位置然后，缩放出现\n        {\n            this.node.setPosition(x, y);\n            let t1 = tween(this.node).to(this.scaleDuration, { scale: new Vec3(this.scale, this.scale) })\n            let t4 = tween(this.node).call(() => {\n                callback();\n            });\n            tween(this.node).sequence(t1, t4).start();\n        }\n\n    }\n\n    onTouchStart(event: EventTouch) {\n        if (this._interaction == false) {\n            console.log('不可点击的麻将 = ', event.target.name);\n        }\n        else {\n            // console.log('麻将 = ', event.target.name);\n            this.node.parent.emit('clickmj', event);\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n}\n\n"]}