{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/mjNode.ts"],"names":["_decorator","Component","instantiate","Intersection2D","Prefab","Rect","SpriteAtlas","tween","Vec3","tools","gameStart","ccclass","property","eventTarget","EventTarget","mjNode","refreshLock","desktopItems","desktopCuritem","randomIndex","mjItemPos","x","y","mjItem","start","setLevelBtn","node","on","onClickMj","startGame","getInstant","hide","desktopItemCount","level","initDesktopMj","onBtnClick","event","customEventData","console","log","spriteFrame","mjSpriteAtlas","getSpriteFrame","length","gameOver","insertItem","insertCallBack","self","deleteDesktopItems","index","isTabCanDelete","refreshDeaktopMj","deleteTabAnima","splice","restTopAnima","update","deltaTime","getRandomMjIndex","i","delay","call","createDesktopMj","refresh","mj","mycard_prefab","parent","mycard","getComponent","push","initMj","itemsXJ","j","pos1","getPosition","pos2","rect1","rect2","rectRect","itemsXJ1","Array","from","Set","maxNodeItem","reduce","a","b","getSiblingIndex","mjscrpit","interaction","desktopScript","cardId","tempIndex","name","callback","t1","to","position","t2","setSiblingIndex","sequence","node2","node1","node0","show","union","repeat","removeSelf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAqCC,MAAAA,S,OAAAA,S;AAA6DC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,c,OAAAA,c;AAAqCC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAyBC,MAAAA,W,OAAAA,W;AAAqCC,MAAAA,K,OAAAA,K;AAA0BC,MAAAA,I,OAAAA,I;;AAGtPC,MAAAA,K;;AACEC,MAAAA,S,iBAAAA,S;;;;;;;;;OAHH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;AACxBa,MAAAA,W,GAAc,IAAIC,WAAJ,E;;wBAIPC,M,WADZJ,OAAO,CAAC,QAAD,C,UAGHC,QAAQ,CAACR,MAAD,C,UAGRQ,QAAQ,CAACN,WAAD,C,2BANb,MACaS,MADb,SAC4Bd,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAQlCe,WARkC,GAQpB,KARoB;AAAA,eASlCC,YATkC,GASnB,EATmB;AASN;AATM,eAUlCC,cAVkC,GAUjB,CAViB;AAUN;AAVM,eAWlCC,WAXkC,GAWpB,CAXoB;AAWN;AAXM,eAalCC,SAbkC,GAatB,CACR;AAAEC,YAAAA,CAAC,EAAE,CAAC,OAAN;AAAeC,YAAAA,CAAC,EAAE,CAAC;AAAnB,WADQ,EAER;AAAED,YAAAA,CAAC,EAAE,CAAC,OAAN;AAAeC,YAAAA,CAAC,EAAE,CAAC;AAAnB,WAFQ,EAGR;AAAED,YAAAA,CAAC,EAAE,CAAC,OAAN;AAAeC,YAAAA,CAAC,EAAE,CAAC;AAAnB,WAHQ,EAIR;AAAED,YAAAA,CAAC,EAAE,CAAC,KAAN;AAAaC,YAAAA,CAAC,EAAE,CAAC;AAAjB,WAJQ,EAKR;AAAED,YAAAA,CAAC,EAAE,MAAL;AAAaC,YAAAA,CAAC,EAAE,CAAC;AAAjB,WALQ,EAMR;AAAED,YAAAA,CAAC,EAAE,OAAL;AAAcC,YAAAA,CAAC,EAAE,CAAC;AAAlB,WANQ,EAOR;AAAED,YAAAA,CAAC,EAAE,OAAL;AAAcC,YAAAA,CAAC,EAAE,CAAC;AAAlB,WAPQ,CAbsB;AAqB5B;AArB4B,eAuBlCC,MAvBkC,GAuBjB,EAvBiB;AAAA;;AAuBd;AAEpBC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AACA,eAAKC,IAAL,CAAUC,EAAV,CAAa,SAAb,EAAwB,KAAKC,SAA7B,EAAwC,IAAxC,EAFI,CAGJ;AACH,SA7BiC,CA+BlC;;;AACAC,QAAAA,SAAS,GAAG;AACR;AAAA;AAAA,sCAAUC,UAAV,GAAuBC,IAAvB;AACA;AAAA;AAAA,8BAAMC,gBAAN,GAAyB;AAAA;AAAA,8BAAMC,KAAN,GAAc,CAAvC;AACA,eAAKC,aAAL;AACH,SApCiC,CAsClC;;;AACAC,QAAAA,UAAU,CAACC,KAAD,EAAeC,eAAf,EAAwC;AAC9C;AACA,cAAIA,eAAe,IAAI,WAAvB,EAAoC;AAChCC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB;AAAA;AAAA,gCAAMN,KAA7B;AACA,iBAAKJ,SAAL;AACH;AACJ,SA7CiC,CA+ClC;;;AACAJ,QAAAA,WAAW,GAAG;AACV,gBAAMe,WAAW,GAAG,KAAKC,aAAL,CAAmBC,cAAnB,CAAkC,YAAY;AAAA;AAAA,8BAAMT,KAApD,CAApB;AACA;AAAA;AAAA,sCAAUH,UAAV,GAAuBL,WAAvB,CAAmCe,WAAnC;AACH;;AAEDZ,QAAAA,SAAS,CAACF,IAAD,EAAa;AAClB;AACA,cAAI,KAAKH,MAAL,CAAYoB,MAAZ,IAAsB,CAA1B,EAA8B;AAC9B;AACIL,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,mBAAKK,QAAL;AACA;AACH,aAPiB,CAQlB;;;AACA,eAAKC,UAAL,CAAgBnB,IAAhB,EAAsBoB,cAAtB,EATkB,CAWlB;;AACA,cAAIC,IAAI,GAAG,IAAX;;AACA,mBAASD,cAAT,GAA0B;AACtBC,YAAAA,IAAI,CAACC,kBAAL,CAAwBtB,IAAxB,EADsB,CAEtB;;AACA,gBAAIuB,KAAK,GAAGF,IAAI,CAACG,cAAL,CAAoBxB,IAApB,CAAZ;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,KAA1B;;AACA,gBAAIA,KAAK,CAACN,MAAN,GAAe,CAAnB,EAAsB;AAClBI,cAAAA,IAAI,CAACI,gBAAL;;AACA,kBAAIJ,IAAI,CAACxB,MAAL,CAAYoB,MAAZ,IAAsB,CAA1B,EAA6B;AACzBL,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACD;AACH,aAXqB,CAYtB;;;AACAQ,YAAAA,IAAI,CAACK,cAAL,CAAoBH,KAApB,EAA2B,YAAY;AACnCF,cAAAA,IAAI,CAACxB,MAAL,CAAY8B,MAAZ,CAAmBJ,KAAK,CAAC,CAAD,CAAxB,EAA6B,CAA7B;AACAF,cAAAA,IAAI,CAACxB,MAAL,CAAY8B,MAAZ,CAAmBJ,KAAK,CAAC,CAAD,CAAxB,EAA6B,CAA7B;AACAF,cAAAA,IAAI,CAACxB,MAAL,CAAY8B,MAAZ,CAAmBJ,KAAK,CAAC,CAAD,CAAxB,EAA6B,CAA7B;AACAF,cAAAA,IAAI,CAACI,gBAAL;AACAb,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAQ,cAAAA,IAAI,CAACO,YAAL;AACH,aAPD;AAQH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDtB,QAAAA,aAAa,GAAG;AACZ,eAAKhB,cAAL,GAAsB,CAAtB;AACA,eAAKC,WAAL,GAAmB;AAAA;AAAA,8BAAMsC,gBAAN,CAAuB,CAAvB,EAA0B,EAA1B,CAAnB;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,eAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,8BAAM1B,gBAA1B,EAA4C0B,CAAC,EAA7C,EAAiD;AAC7CnD,YAAAA,KAAK,CAAC,KAAKmB,IAAN,CAAL,CACKiC,KADL,CACWD,CAAC,GAAG,GADf,EAEKE,IAFL,CAEU,MAAM;AAAEF,cAAAA,CAAC,IAAI;AAAA;AAAA,kCAAM1B,gBAAN,GAAyB,CAA9B,GAAkC,KAAK6B,eAAL,CAAqB,IAArB,CAAlC,GAA+D,KAAKA,eAAL,CAAqB,KAArB,CAA/D;AAA6F,aAF/G,EAGKrC,KAHL;AAIH;AACJ,SAxGiC,CA0GlC;;;AACAqC,QAAAA,eAAe,CAACC,OAAD,EAAU;AACrB;AACA,cAAI,KAAK5C,cAAL,GAAsB,CAAtB,IAA2B,CAA/B,EAAkC,KAAKC,WAAL,GAAmB;AAAA;AAAA,8BAAMsC,gBAAN,CAAuB,CAAvB,EAA0B,EAA1B,CAAnB,CAFb,CAGrB;;AACA,gBAAMjB,WAAW,GAAG,KAAKC,aAAL,CAAmBC,cAAnB,CAAkC,YAAY,KAAKvB,WAAnD,CAApB;AACA,cAAI4C,EAAE,GAAG7D,WAAW,CAAC,KAAK8D,aAAN,CAApB;AACAD,UAAAA,EAAE,CAACE,MAAH,GAAY,KAAKvC,IAAjB;AACA,cAAIwC,MAAM,GAAGH,EAAE,CAACI,YAAH,CAAgB,QAAhB,CAAb;AACA,eAAKlD,YAAL,CAAkBmD,IAAlB,CAAuBL,EAAvB;AACA,cAAIhB,IAAI,GAAG,IAAX;AACAmB,UAAAA,MAAM,CAACG,MAAP,CAAc,KAAKlD,WAAnB,EAAgC,KAAKF,YAAL,CAAkB0B,MAAlD,EAA0DH,WAA1D,EAAuE;AAAA;AAAA,8BAAMP,KAA7E,EAAoF,YAAY;AAC5F,gBAAI6B,OAAJ,EAAa;AACTf,cAAAA,IAAI,CAACI,gBAAL;AACAb,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,IAAI,CAAC7B,cAA5B;AACH;AACJ,WALD;AAMA,eAAKA,cAAL,IAAuB,CAAvB;AACH,SA5HiC,CA8HlC;;;AACAiC,QAAAA,gBAAgB,GAAG;AACfb,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKtB,YAA3B;;AACA,eAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzC,YAAL,CAAkB0B,MAAtC,EAA8Ce,CAAC,EAA/C,EAAmD;AAC/C,gBAAIY,OAAO,GAAG,EAAd;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtD,YAAL,CAAkB0B,MAAtC,EAA8C4B,CAAC,EAA/C,EAAmD;AAC/C,kBAAIC,IAAI,GAAG,KAAKvD,YAAL,CAAkByC,CAAlB,EAAqBe,WAArB,EAAX;AACA,kBAAIC,IAAI,GAAG,KAAKzD,YAAL,CAAkBsD,CAAlB,EAAqBE,WAArB,EAAX;AACA,kBAAIE,KAAK,GAAG,IAAItE,IAAJ,CAASmE,IAAI,CAACnD,CAAd,EAAiBmD,IAAI,CAAClD,CAAtB,EAAyB,EAAzB,EAA6B,GAA7B,CAAZ;AACA,kBAAIsD,KAAK,GAAG,IAAIvE,IAAJ,CAASqE,IAAI,CAACrD,CAAd,EAAiBqD,IAAI,CAACpD,CAAtB,EAAyB,EAAzB,EAA6B,GAA7B,CAAZ;;AACA,kBAAInB,cAAc,CAAC0E,QAAf,CAAwBF,KAAxB,EAA+BC,KAA/B,CAAJ,EAA2C;AACvCN,gBAAAA,OAAO,CAACF,IAAR,CAAa,KAAKnD,YAAL,CAAkBsD,CAAlB,CAAb;AACH;AACJ;;AACD,gBAAID,OAAO,CAAC3B,MAAR,GAAiB,CAArB,EAAwB,OAXuB,CAY/C;;AACA,gBAAImC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQX,OAAR,CAAX,CAAf,CAb+C,CAc/C;;AACA,gBAAIY,WAAW,GAAGJ,QAAQ,CAACK,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,eAAF,KAAsBD,CAAC,CAACC,eAAF,EAAtB,GAA4CF,CAA5C,GAAgDC,CAA3E,CAAlB,CAf+C,CAgB/C;;AACA,iBAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,QAAQ,CAACnC,MAA7B,EAAqCe,CAAC,EAAtC,EAA0C;AACtC,kBAAI6B,QAAQ,GAAGT,QAAQ,CAACpB,CAAD,CAAR,CAAYS,YAAZ,CAAyB,QAAzB,CAAf;AACAoB,cAAAA,QAAQ,CAACC,WAAT,GAAuB,KAAvB;AACH;;AACD,gBAAID,QAAQ,GAAGL,WAAW,CAACf,YAAZ,CAAyB,QAAzB,CAAf;AACAoB,YAAAA,QAAQ,CAACC,WAAT,GAAuB,IAAvB;AACH;AAEJ,SA1JiC,CA4JlC;;;AACAxC,QAAAA,kBAAkB,CAACjC,MAAD,EAAS;AACvB,cAAIwE,QAAQ,GAAGxE,MAAM,CAACoD,YAAP,CAAoB,QAApB,CAAf;;AACA,eAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzC,YAAL,CAAkB0B,MAAtC,EAA8Ce,CAAC,EAA/C,EAAmD;AAC/C,gBAAI+B,aAAa,GAAG,KAAKxE,YAAL,CAAkByC,CAAlB,EAAqBS,YAArB,CAAkC,QAAlC,CAApB;;AACA,gBAAIoB,QAAQ,CAACG,MAAT,IAAmBD,aAAa,CAACC,MAArC,EAA6C;AACzC,mBAAKzE,YAAL,CAAkBoC,MAAlB,CAAyBK,CAAzB,EAA4B,CAA5B;AACApB,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKtB,YAA9B;AACA;AACH;AACJ;AAEJ,SAxKiC,CA0KlC;;;AACAiC,QAAAA,cAAc,CAACxB,IAAD,EAAa;AACvB,cAAIiE,SAAS,GAAG,EAAhB,CADuB,CAEvB;;AACA,eAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnC,MAAL,CAAYoB,MAAhC,EAAwCe,CAAC,EAAzC,EAA6C;AACzC,gBAAI,KAAKnC,MAAL,CAAYmC,CAAZ,EAAekC,IAAf,IAAuBlE,IAAI,CAACkE,IAAhC,EAAsC;AAClCD,cAAAA,SAAS,CAACvB,IAAV,CAAeV,CAAf;AACH;AACJ;;AACD,cAAIiC,SAAS,CAAChD,MAAV,IAAoB,CAAxB,EAA2BgD,SAAS,GAAG,EAAZ;AAC3B,iBAAOA,SAAP;AACH,SArLiC,CAuLlC;;;AACA9C,QAAAA,UAAU,CAACnB,IAAD,EAAamE,QAAb,EAAuB;AAC7B,eAAKtE,MAAL,CAAY6C,IAAZ,CAAiB1C,IAAjB;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,cAAIU,KAAK,GAAG,KAAK1B,MAAL,CAAYoB,MAAZ,GAAqB,CAAjC;AACA,cAAImD,EAAE,GAAGvF,KAAK,CAACmB,IAAD,CAAL,CAAYqE,EAAZ,CAAe,GAAf,EAAoB;AAAEC,YAAAA,QAAQ,EAAE,IAAIxF,IAAJ,CAAS,KAAKY,SAAL,CAAe6B,KAAf,EAAsB5B,CAA/B,EAAkC,KAAKD,SAAL,CAAe6B,KAAf,EAAsB3B,CAAxD,EAA2D,CAA3D;AAAZ,WAApB,CAAT;AACA,cAAI2E,EAAE,GAAG1F,KAAK,CAACmB,IAAD,CAAL,CAAYkC,IAAZ,CAAiB,MAAM;AAC5BiC,YAAAA,QAAQ;AACX,WAFQ,CAAT;AAGAnE,UAAAA,IAAI,CAACwE,eAAL,CAAqB,IAArB;AACA3F,UAAAA,KAAK,CAACmB,IAAD,CAAL,CAAYyE,QAAZ,CAAqBL,EAArB,EAAyBG,EAAzB,EAA6BzE,KAA7B;AACH,SAlMiC,CAoMlC;;;AACA4B,QAAAA,cAAc,CAACH,KAAD,EAAQ4C,QAAR,EAAkB;AAC5B,cAAIO,KAAK,GAAG,KAAK7E,MAAL,CAAY0B,KAAK,CAAC,CAAD,CAAjB,CAAZ;AACA,cAAIoD,KAAK,GAAG,KAAK9E,MAAL,CAAY0B,KAAK,CAAC,CAAD,CAAjB,CAAZ;AACA,cAAIqD,KAAK,GAAG,KAAK/E,MAAL,CAAY0B,KAAK,CAAC,CAAD,CAAjB,CAAZ;AACA1C,UAAAA,KAAK,CAAC6F,KAAD,CAAL,CACKzC,KADL,CACW,GADX,EAEK4C,IAFL,GAGK5C,KAHL,CAGW,GAHX,EAIK5B,IAJL,GAKKyE,KALL,GAMKC,MANL,CAMY,CANZ,EAOKC,UAPL,GAQKlF,KARL;AASAjB,UAAAA,KAAK,CAAC8F,KAAD,CAAL,CACK1C,KADL,CACW,GADX,EAEK4C,IAFL,GAGK5C,KAHL,CAGW,GAHX,EAIK5B,IAJL,GAKKyE,KALL,GAMKC,MANL,CAMY,CANZ,EAOKC,UAPL,GAQKlF,KARL;AASAjB,UAAAA,KAAK,CAAC+F,KAAD,CAAL,CACK3C,KADL,CACW,GADX,EAEK4C,IAFL,GAGK5C,KAHL,CAGW,GAHX,EAIK5B,IAJL,GAKKyE,KALL,GAMKC,MANL,CAMY,CANZ,EAOKC,UAPL,GAQK9C,IARL,CAQUiC,QAAQ,EARlB,EASKrE,KATL;AAUH,SArOiC,CAuOlC;;;AACA8B,QAAAA,YAAY,GAAG;AACX,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnC,MAAL,CAAYoB,MAAhC,EAAwCe,CAAC,EAAzC,EAA6C;AACzCnD,YAAAA,KAAK,CAAC,KAAKgB,MAAL,CAAYmC,CAAZ,CAAD,CAAL,CACKC,KADL,CACW,GADX,EAEK4C,IAFL,GAGKR,EAHL,CAGQ,GAHR,EAGa;AAAEC,cAAAA,QAAQ,EAAE,IAAIxF,IAAJ,CAAS,KAAKY,SAAL,CAAesC,CAAf,EAAkBrC,CAA3B,EAA8B,KAAKD,SAAL,CAAesC,CAAf,EAAkBpC,CAAhD,EAAmD,CAAnD;AAAZ,aAHb,EAIKE,KAJL;AAKH;AAEJ,SAjPiC,CAmPlC;;;AACAoB,QAAAA,QAAQ,GAAG,CAEV;;AAtPiC,O;;;;;iBAGH,I;;;;;;;iBAGF,I","sourcesContent":["import { _decorator, BoxCollider2D, Collider, Component, ConfigurableConstraint, EventTouch, Input, input, instantiate, Intersection2D, Node, NodeEventType, Prefab, Rect, resources, Sprite, SpriteAtlas, SpriteFrame, Texture2D, tween, UITransform, Vec2, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\nconst eventTarget = new EventTarget();\nimport tools from './tools'\nimport { gameStart } from './gameStart';\n@ccclass('mjNode')\nexport class mjNode extends Component {\n\n    @property(Prefab)\n    mycard_prefab: Prefab | null = null;\n\n    @property(SpriteAtlas)\n    mjSpriteAtlas: SpriteAtlas = null;\n\n    refreshLock = false;\n    desktopItems = [];          //桌面麻将\n    desktopCuritem = 0;         //当前数量\n    randomIndex = 0;            //当前随机牌索引\n\n    mjItemPos = [\n        { x: -294.764, y: -572 },\n        { x: -197.881, y: -572 },\n        { x: -100.211, y: -572 },\n        { x: -2.572, y: -572 },\n        { x: 94.539, y: -572 },\n        { x: 190.994, y: -572 },\n        { x: 290.353, y: -572 },\n    ];    //物品栏坐标\n\n    mjItem: Node[] = [] //物品栏\n\n    start() {\n        this.setLevelBtn();\n        this.node.on('clickmj', this.onClickMj, this);\n        //this.startGame();\n    }\n\n    //开始游戏\n    startGame() {\n        gameStart.getInstant().hide()\n        tools.desktopItemCount = tools.level * 9;\n        this.initDesktopMj();\n    }\n\n    //按钮点击事件\n    onBtnClick(event: Event, customEventData: string) {\n        //游戏开始\n        if (customEventData == 'gameStart') {\n            console.log('游戏开始---', tools.level)\n            this.startGame();\n        }\n    }\n\n    //设置关卡按钮\n    setLevelBtn() {\n        const spriteFrame = this.mjSpriteAtlas.getSpriteFrame('s_wzmj_' + tools.level);\n        gameStart.getInstant().setLevelBtn(spriteFrame);\n    }\n\n    onClickMj(node: Node) {\n        //是否可以插入\n        if (this.mjItem.length >= 7)  //不可以插入,游戏结束\n        {\n            console.log('格子已经满了---游戏结束');\n            this.gameOver();\n            return;\n        }\n        //可以插入\n        this.insertItem(node, insertCallBack);\n\n        //插入回调，删除桌面麻将\n        var self = this;\n        function insertCallBack() {\n            self.deleteDesktopItems(node);\n            //判断物品栏是否可以消除\n            let index = self.isTabCanDelete(node);\n            console.log('可以消除的下标---', index);\n            if (index.length < 3) {\n                self.refreshDeaktopMj();\n                if (self.mjItem.length == 7) {\n                    console.log('游戏结束---');\n                }\n                return;\n            }\n            //开始执行物品栏消除动画\n            self.deleteTabAnima(index, function () {\n                self.mjItem.splice(index[2], 1);\n                self.mjItem.splice(index[1], 1);\n                self.mjItem.splice(index[0], 1);\n                self.refreshDeaktopMj();\n                console.log('消除回调---')\n                self.restTopAnima()\n            })\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    initDesktopMj() {\n        this.desktopCuritem = 0;\n        this.randomIndex = tools.getRandomMjIndex(1, 37);\n        console.log('开始发牌---');\n        for (let i = 0; i < tools.desktopItemCount; i++) {\n            tween(this.node)\n                .delay(i * 0.1)\n                .call(() => { i == tools.desktopItemCount - 1 ? this.createDesktopMj(true) : this.createDesktopMj(false); })\n                .start()\n        }\n    }\n\n    //随机创建麻将\n    createDesktopMj(refresh) {\n        //发牌\n        if (this.desktopCuritem % 3 == 0) this.randomIndex = tools.getRandomMjIndex(1, 37);\n        // this.randomIndex += 1;\n        const spriteFrame = this.mjSpriteAtlas.getSpriteFrame('s_wzmj_' + this.randomIndex);\n        let mj = instantiate(this.mycard_prefab);\n        mj.parent = this.node;\n        var mycard = mj.getComponent(\"mjcard\");\n        this.desktopItems.push(mj);\n        var self = this;\n        mycard.initMj(this.randomIndex, this.desktopItems.length, spriteFrame, tools.level, function () {\n            if (refresh) {\n                self.refreshDeaktopMj();\n                console.log('发牌完毕---', self.desktopCuritem);\n            }\n        });\n        this.desktopCuritem += 1;\n    }\n\n    //刷新麻将状态\n    refreshDeaktopMj() {\n        console.log('刷新牌---', this.desktopItems);\n        for (let i = 0; i < this.desktopItems.length; i++) {\n            let itemsXJ = [];\n            for (let j = 0; j < this.desktopItems.length; j++) {\n                let pos1 = this.desktopItems[i].getPosition();\n                let pos2 = this.desktopItems[j].getPosition();\n                let rect1 = new Rect(pos1.x, pos1.y, 90, 120);\n                let rect2 = new Rect(pos2.x, pos2.y, 90, 120);\n                if (Intersection2D.rectRect(rect1, rect2)) {\n                    itemsXJ.push(this.desktopItems[j]);\n                }\n            }\n            if (itemsXJ.length < 1) return;\n            //去除数组相同的麻将\n            let itemsXJ1 = Array.from(new Set(itemsXJ));\n            //获取数组最大的麻将\n            let maxNodeItem = itemsXJ1.reduce((a, b) => (a.getSiblingIndex() > b.getSiblingIndex() ? a : b));\n            //设置麻将渲染层级\n            for (let i = 0; i < itemsXJ1.length; i++) {\n                let mjscrpit = itemsXJ1[i].getComponent(\"mjcard\");\n                mjscrpit.interaction = false;\n            }\n            let mjscrpit = maxNodeItem.getComponent(\"mjcard\");\n            mjscrpit.interaction = true;\n        }\n\n    }\n\n    //删除桌面麻将\n    deleteDesktopItems(mjNode) {\n        let mjscrpit = mjNode.getComponent(\"mjcard\");\n        for (let i = 0; i < this.desktopItems.length; i++) {\n            let desktopScript = this.desktopItems[i].getComponent(\"mjcard\");\n            if (mjscrpit.cardId == desktopScript.cardId) {\n                this.desktopItems.splice(i, 1);\n                console.log('删除桌面成功---', this.desktopItems);\n                return;\n            }\n        }\n\n    }\n\n    //判断是否可以消除,返回消除下标数组\n    isTabCanDelete(node: Node) {\n        let tempIndex = [];\n        //判断否可以消除\n        for (let i = 0; i < this.mjItem.length; i++) {\n            if (this.mjItem[i].name == node.name) {\n                tempIndex.push(i);\n            }\n        }\n        if (tempIndex.length != 3) tempIndex = [];\n        return tempIndex;\n    }\n\n    //插入到物品栏\n    insertItem(node: Node, callback) {\n        this.mjItem.push(node);\n        console.log('插入成功---');\n        let index = this.mjItem.length - 1;\n        let t1 = tween(node).to(0.2, { position: new Vec3(this.mjItemPos[index].x, this.mjItemPos[index].y, 0) })\n        let t2 = tween(node).call(() => {\n            callback()\n        });\n        node.setSiblingIndex(1000);\n        tween(node).sequence(t1, t2).start()\n    }\n\n    //消除物品栏动画\n    deleteTabAnima(index, callback) {\n        let node2 = this.mjItem[index[2]];\n        let node1 = this.mjItem[index[1]];\n        let node0 = this.mjItem[index[0]];\n        tween(node2)\n            .delay(0.1)\n            .show()\n            .delay(0.1)\n            .hide()\n            .union()\n            .repeat(3)\n            .removeSelf()\n            .start();\n        tween(node1)\n            .delay(0.1)\n            .show()\n            .delay(0.1)\n            .hide()\n            .union()\n            .repeat(3)\n            .removeSelf()\n            .start();\n        tween(node0)\n            .delay(0.1)\n            .show()\n            .delay(0.1)\n            .hide()\n            .union()\n            .repeat(3)\n            .removeSelf()\n            .call(callback())\n            .start();\n    }\n\n    //整理物品栏\n    restTopAnima() {\n        for (let i = 0; i < this.mjItem.length; i++) {\n            tween(this.mjItem[i])\n                .delay(0.5)\n                .show()\n                .to(0.3, { position: new Vec3(this.mjItemPos[i].x, this.mjItemPos[i].y, 0) })\n                .start();\n        }\n\n    }\n\n    //游戏结束\n    gameOver() {\n\n    }\n}\n\n"]}