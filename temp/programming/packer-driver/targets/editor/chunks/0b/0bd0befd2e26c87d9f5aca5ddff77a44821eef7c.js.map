{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/audioManager.ts"],"names":["_decorator","AudioClip","AudioSource","director","Node","resources","ccclass","property","AudioMgr","Instance","_instance","constructor","_audioSource","_volume","_sound_on","_audioSource2","console","log","audio_node","name","getScene","addChild","addPersistRootNode","addComponent","playOnAwake","audio_node2","AudioSource2","playBgm","clip","volume","sound","error","stop","play","loop","load","err","audio","playEffect","sound_clip","playOneShot","playEffectCanBreak","setMenu","soundOpen","stopBgm","pauseBgm","pause","resumeBgm"],"mappings":"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","sourcesContent":["import { _decorator, AudioClip, AudioSource, Component, director, Node, resources } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AudioMgr')\r\nexport default class AudioMgr {\r\n\r\n    //设计成单例\r\n    private static _instance: AudioMgr;\r\n    public static get Instance(): AudioMgr {\r\n        if (!this._instance) {\r\n            this._instance = new AudioMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n    //AudioSource组件用于控制音频播放\r\n    private _audioSource: AudioSource;\r\n\r\n    private _volume: number = 0.8;//默认音量（部分web平台（ios）限制并不会生效）\r\n    private _sound_on: boolean = true;//音效开关\r\n\r\n    //特别：用于播放可以被打断的音效\r\n    private _audioSource2: AudioSource;\r\n\r\n\r\n    constructor() {\r\n        console.log('初始化声音管理模块');\r\n        //创建一个空节点\r\n        let audio_node = new Node();\r\n        audio_node.name = '__audio_node__';\r\n        //把创建的节点添加到场景中\r\n        director.getScene().addChild(audio_node);\r\n        //设置为常驻节点\r\n        director.addPersistRootNode(audio_node);\r\n        //添加AudioSource组件\r\n        this._audioSource = audio_node.addComponent(AudioSource);\r\n        //把音频设置为非加载完自动播放（部分web平台不允许未交互就有音频播放）\r\n        this._audioSource.playOnAwake = false;\r\n\r\n        let audio_node2 = new Node();\r\n        audio_node2.name = '__audio_node2__';\r\n        director.getScene().addChild(audio_node2);\r\n        director.addPersistRootNode(audio_node2);\r\n        this._audioSource2 = audio_node2.addComponent(AudioSource);\r\n        this._audioSource2.playOnAwake = false;\r\n    }\r\n\r\n    public get AudioSource(): AudioSource {\r\n        return this._audioSource;\r\n    }\r\n\r\n    public get AudioSource2(): AudioSource {\r\n        return this._audioSource2;\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param sound 音频剪辑或者resources的音频路径\r\n     * @param volume \r\n     */\r\n    playBgm(clip: AudioClip | string, volume: number = 1.0) {\r\n        if (!this._sound_on) {\r\n            this._volume = 0;\r\n        } else {\r\n            this._volume = volume;\r\n        }\r\n        let sound = clip;\r\n        if (!sound) {\r\n            console.error(\"背景音乐为空\");\r\n            return;\r\n        }\r\n        if (sound instanceof AudioClip) {\r\n            this._audioSource.stop();\r\n            this._audioSource.clip = sound; //考虑到切换背景音乐时，先停止后播放，防止出现播放叠加或不播放的问题\r\n            this._audioSource.play();\r\n            this._audioSource.loop = true;\r\n            this._audioSource.volume = this._volume;\r\n        } else {\r\n            //(实际上不放在这里，一般来说会在ResMgr中预先加载)\r\n            resources.load(sound, (err, audio: AudioClip) => {\r\n                if (err) {\r\n                    console.error(\"背景音乐加载失败\", sound);\r\n                } else {\r\n                    this._audioSource.stop();\r\n                    this._audioSource.clip = audio;\r\n                    this._audioSource.play();\r\n                    this._audioSource.loop = true;\r\n                    this._audioSource.volume = this._volume;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 播放音效1 预加载方式\r\n     * @param soundtype 音频类型（定义）\r\n     * @param volume \r\n     */\r\n    playEffect(sound_clip: AudioClip | string, volume: number = 1.0) {\r\n        if (!this._sound_on) return;\r\n        let sound = sound_clip;\r\n        if (!sound) {\r\n            console.error(\"音效为空\");\r\n            return;\r\n        }\r\n        //判断是不是音频剪辑\r\n        if (sound instanceof AudioClip) {\r\n            this._audioSource.playOneShot(sound, this._volume);\r\n        } else {\r\n            //动态加载(实际上不放在这里，一般来说会在ResMgr中预先加载)\r\n            resources.load(sound, (err, audio: AudioClip) => {\r\n                if (err) {\r\n                    console.error(\"音效加载失败\", sound);\r\n                } else {\r\n                    this._audioSource.playOneShot(audio, this._volume);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效2 可以被打断的音效\r\n     * @param sound_clip \r\n     * @param volume \r\n     */\r\n    playEffectCanBreak(sound_clip: AudioClip | string, volume: number = 1.0) {\r\n        if (!this._sound_on) {\r\n            this._volume = 0;\r\n        } else {\r\n            this._volume = volume;\r\n        }\r\n        let sound = sound_clip;\r\n        if (!sound) {\r\n            console.error(\"音效为空\");\r\n            return;\r\n        }\r\n        if (sound instanceof AudioClip) {\r\n            this._audioSource2.stop();\r\n            this._audioSource2.clip = sound;\r\n            this._audioSource2.play();\r\n            this._audioSource2.loop = false;\r\n            this._audioSource2.volume = this._volume;\r\n        } else {\r\n            resources.load(sound, (err, audio: AudioClip) => {\r\n                if (err) {\r\n                    console.error(\"音效加载失败\", sound);\r\n                } else {\r\n                    this._audioSource2.stop();\r\n                    this._audioSource2.clip = audio;\r\n                    this._audioSource2.play();\r\n                    this._audioSource2.loop = false;\r\n                    this._audioSource2.volume = this._volume;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 客户端音效开关\r\n     * @param soundOpen \r\n     */\r\n    setMenu(soundOpen: boolean) {\r\n        this._sound_on = soundOpen;\r\n        if (!this._sound_on) {\r\n            this._audioSource.volume = 0;\r\n            this._audioSource2.volume = 0;\r\n            this._volume = 0;\r\n        } else {\r\n            this._audioSource.volume = 1.0;\r\n            this._audioSource2.volume = 1.0;\r\n            this._volume = 1.0;\r\n        }\r\n    }\r\n    /**\r\n     * 停止背景音乐\r\n     */\r\n    stopBgm() {\r\n        this._audioSource.stop();\r\n    }\r\n\r\n    /**\r\n     * 暂停背景音乐\r\n     */\r\n    pauseBgm() {\r\n        this._audioSource.pause();\r\n    }\r\n    /**\r\n     * 恢复背景音乐\r\n     */\r\n    resumeBgm() {\r\n        this._audioSource.play();\r\n    }\r\n}\r\n\r\n\r\n"]}