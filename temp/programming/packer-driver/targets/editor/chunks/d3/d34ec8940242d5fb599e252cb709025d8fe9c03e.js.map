{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/resMgr.ts"],"names":["resMgr","assetManager","Component","totalAb","nowAb","total","now","abBounds","progressFunc","endFunc","onLoad","Instance","console","log","destroy","loadRes","abBundle","url","typeClass","load","error","asset","loadAssetsInAssetsBundle","resPkg","key","urlSet","urls","assetType","i","length","loadAssetsBundle","abName","loadBundle","err","bundle","preLoadResPkg","unLoadResPkg","preLoadRes","getAsset","bondule","getBundle","get"],"mappings":"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","sourcesContent":["import { _decorator, AssetManager, assetManager, Component, error, Node } from 'cc';\n\nexport class resMgr extends Component {\n    static Instance: resMgr = null;\n\n    private totalAb: number = 0;     //ab包数量\n    private nowAb: number = 0;         //当前加载的个数\n\n    private total: number = 0;       //资源总个数\n    private now: number = 0;         //当前加载的个数\n\n    private abBounds = {};          //保存ab包对应的对象\n    private progressFunc: Function = null;\n    private endFunc: Function = null;\n\n    onLoad(): void {\n        if (resMgr.Instance === null) {\n            console.log('初始化resMgr单列!')\n            resMgr.Instance = this;\n        }\n        else {\n            this.destroy();\n            return;\n        }\n    }\n\n    private loadRes(abBundle: any, url: any, typeClass: any) {\n        abBundle.load(url, typeClass, (error: any, asset: any) => {\n            this.now++;\n            if (error) {\n                console.log('load res = ' + url + '--失败:' + error);\n            }\n            else {\n                console.log('load res  = ' + url + '--成功');\n            }\n            if (this.progressFunc) {\n                this.progressFunc(this.now, this.total);\n            }\n            if (this.now >= this.total) {\n                if (this.endFunc != null) this.endFunc();\n            }\n        })\n    }\n\n    private loadAssetsInAssetsBundle(resPkg: any) {\n        for (var key in resPkg) {\n            var urlSet = resPkg[key].urls;\n            var typeClass = resPkg[key].assetType;\n\n            for (var i = 0; i < urlSet.length; i++) {\n                this.loadRes(this.abBounds[key], urlSet[i], typeClass);\n            }\n        }\n    }\n\n    private loadAssetsBundle(abName: string, endFunc: Function) {\n        assetManager.loadBundle(abName, (err, bundle: AssetManager.Bundle) => {\n            if (err != null) {\n                console.log('Bundle--load 失败:' + abName);\n                this.abBounds[abName] = null;\n            }\n            else {\n                console.log('Bundle--load 成功:' + abName);\n                //console.log('Bundle--load 成功:' + bundle);\n                this.abBounds[abName] = bundle;\n            }\n            if (endFunc) {\n                endFunc();\n            }\n        })\n    }\n\n    //预加载资源包\n    preLoadResPkg(resPkg: any, progressFunc: Function | null, endFunc: Function) {\n        this.totalAb = 0;\n        this.nowAb = 0;\n        this.total = 0;\n        this.now = 0;\n        this.progressFunc = progressFunc;\n        this.endFunc = endFunc;\n\n        for (var key in resPkg) {\n            this.totalAb++;\n            this.total += resPkg[key].urls.length;\n        }\n\n        for (var key in resPkg) {\n            this.loadAssetsBundle(key, () => {\n                this.nowAb++;\n                if (this.nowAb === this.totalAb) {\n                    this.loadAssetsInAssetsBundle(resPkg);\n                }\n            })\n        }\n    }\n\n    //释放加载的资源包\n    unLoadResPkg() {\n\n    }\n\n    //预加载资源\n    preLoadRes(abName: string, url: string, progressFunc: Function, endFunc: Function) {\n\n    }\n\n    //获取资源\n    getAsset(abName: string, url: string) {\n        var bondule = assetManager.getBundle(abName);\n        if (bondule == null) {\n            console.log('err:' + abName + 'ab包加载失败');\n            return null;\n        }\n        return bondule.get(url);\n    }\n}\n\n"]}