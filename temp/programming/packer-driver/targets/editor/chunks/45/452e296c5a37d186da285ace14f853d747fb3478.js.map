{"version":3,"sources":["file:///C:/Users/zzx/Desktop/myGameMj/assets/scripts/audioManager.ts"],"names":["audioManager","AudioClip","clamp01","warn","tools","soundVolume","instance","_instance","init","audioSource","_audioSource","playMusic","loop","playing","play","playSound","name","path","loadRes","err","clip","playOneShot","setMusicVolume","flag","volume","setSoundVolume","openMusic","closeMusic","openSound","closeSound"],"mappings":";;;gHAGaA,Y;;;;;;;;;;;;;;;AAHQC,MAAAA,S,OAAAA,S;AAAqCC,MAAAA,O,OAAAA,O;AAASC,MAAAA,I,OAAAA,I;;AAC5DC,MAAAA,K;;;;;;;;;8BAEMJ,Y,GAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA,eAatBK,WAbsB,GAaA,CAbA;AAAA;;AAIH,mBAARC,QAAQ,GAAG;AAClB,cAAI,KAAKC,SAAT,EAAoB;AAChB,mBAAO,KAAKA,SAAZ;AACH;;AAED,eAAKA,SAAL,GAAiB,IAAIP,YAAJ,EAAjB;AACA,iBAAO,KAAKO,SAAZ;AACH;;AAID;AACAC,QAAAA,IAAI,CAACC,WAAD,EAA2B;AAC3B,eAAKJ,WAAL,GAAmB,CAAnB,CAD2B,CACN;;AAErBL,UAAAA,YAAY,CAACU,YAAb,GAA4BD,WAA5B;AACH,SApBqB,CAsBtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACJ;AACA;AACA;AACA;;;AACIE,QAAAA,SAAS,CAACC,IAAD,EAAgB;AACrB,gBAAMH,WAAW,GAAGT,YAAY,CAACU,YAAjC,CADqB,CAErB;;AAEAD,UAAAA,WAAW,CAACG,IAAZ,GAAmBA,IAAnB;;AACA,cAAI,CAACH,WAAW,CAACI,OAAjB,EAA0B;AACtBJ,YAAAA,WAAW,CAACK,IAAZ;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACIC,QAAAA,SAAS,CAACC,IAAD,EAAe;AACpB,gBAAMP,WAAW,GAAGT,YAAY,CAACU,YAAjC,CADoB,CAEpB;AAEA;;AACA,cAAIO,IAAI,GAAG,QAAX,CALoB,CAMpB;AACA;AACA;;AAEA;AAAA;AAAA,8BAAMC,OAAN,CAAcD,IAAI,GAAGD,IAArB,EAA2Bf,SAA3B,EAAsC,CAACkB,GAAD,EAAMC,IAAN,KAAe;AACjD,gBAAID,GAAJ,EAAS;AACLhB,cAAAA,IAAI,CAAC,yBAAD,EAA4BgB,GAA5B,CAAJ;AACA;AACH,aAJgD,CAMjD;AACA;;;AACAV,YAAAA,WAAW,CAACY,WAAZ,CAAwBD,IAAxB,EAA8B,CAA9B;AACH,WATD;AAWH;;AAEDE,QAAAA,cAAc,CAACC,IAAD,EAAe;AACzB,gBAAMd,WAAW,GAAGT,YAAY,CAACU,YAAjC,CADyB,CAEzB;;AAEAa,UAAAA,IAAI,GAAGrB,OAAO,CAACqB,IAAD,CAAd;AACAd,UAAAA,WAAW,CAACe,MAAZ,GAAqBD,IAArB;AACH;;AAEDE,QAAAA,cAAc,CAACF,IAAD,EAAe;AACzB,eAAKlB,WAAL,GAAmBkB,IAAnB;AACH;;AAEDG,QAAAA,SAAS,GAAG;AACR,eAAKJ,cAAL,CAAoB,GAApB,EADQ,CAER;AACH;;AAEDK,QAAAA,UAAU,GAAG;AACT,eAAKL,cAAL,CAAoB,CAApB,EADS,CAET;AACH;;AAEDM,QAAAA,SAAS,GAAG;AACR,eAAKH,cAAL,CAAoB,CAApB,EADQ,CAER;AACH;;AAEDI,QAAAA,UAAU,GAAG;AACT,eAAKJ,cAAL,CAAoB,CAApB,EADS,CAET;AACH;;AA3GqB,O;;AAAbzB,MAAAA,Y,CACMO,S;AADNP,MAAAA,Y,CAEMU,Y","sourcesContent":["import { _decorator, AudioClip, sys, AudioSource, assert, clamp01, warn } from \"cc\";\r\nimport tools from \"./tools\";\r\n\r\nexport class audioManager {\r\n    private static _instance: audioManager;\r\n    private static _audioSource?: AudioSource;\r\n\r\n    static get instance() {\r\n        if (this._instance) {\r\n            return this._instance;\r\n        }\r\n\r\n        this._instance = new audioManager();\r\n        return this._instance;\r\n    }\r\n\r\n    soundVolume: number = 1;\r\n\r\n    // init AudioManager in GameRoot.\r\n    init(audioSource: AudioSource) {\r\n        this.soundVolume = 1;//this.getConfiguration(false) ? 1 : 0;\r\n\r\n        audioManager._audioSource = audioSource;\r\n    }\r\n\r\n    //   getConfiguration (isMusic: boolean) {\r\n    //     let state;\r\n    //     if (isMusic) {\r\n    //         state = configuration.instance.getGlobalData('music');\r\n    //     } else {\r\n    //         state = configuration.instance.getGlobalData('sound');\r\n    //     }\r\n\r\n    //     // console.log('Config for [' + (isMusic ? 'Music' : 'Sound') + '] is ' + state);\r\n\r\n    //     return state === undefined || state === 'true' ? true : false;\r\n    // }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param {String} name 音乐名称可通过constants.AUDIO_MUSIC 获取\r\n     * @param {Boolean} loop 是否循环播放\r\n     */\r\n    playMusic(loop: boolean) {\r\n        const audioSource = audioManager._audioSource!;\r\n        //assert(audioSource, 'AudioManager not inited!');\r\n\r\n        audioSource.loop = loop;\r\n        if (!audioSource.playing) {\r\n            audioSource.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param {String} name 音效名称可通过constants.AUDIO_SOUND 获取\r\n     */\r\n    playSound(name: string) {\r\n        const audioSource = audioManager._audioSource!;\r\n        //assert(audioSource, 'AudioManager not inited!');\r\n\r\n        //音效一般是多个的，不会只有一个\r\n        let path = 'sound/';\r\n        // if (name !== 'click') {\r\n        //     path = 'gamePackage/' + path; //微信特殊处理，除一开场的音乐，其余的放在子包里头\r\n        // }\r\n\r\n        tools.loadRes(path + name, AudioClip, (err, clip) => {\r\n            if (err) {\r\n                warn('load audioClip failed: ', err);\r\n                return;\r\n            }\r\n\r\n            // NOTE: the second parameter is volume scale.\r\n            // audioSource.playOneShot(clip, audioSource.volume ? this.soundVolume / audioSource.volume : 0);\r\n            audioSource.playOneShot(clip, 1);\r\n        });\r\n\r\n    }\r\n\r\n    setMusicVolume(flag: number) {\r\n        const audioSource = audioManager._audioSource!;\r\n        // assert(audioSource, 'AudioManager not inited!');\r\n\r\n        flag = clamp01(flag);\r\n        audioSource.volume = flag;\r\n    }\r\n\r\n    setSoundVolume(flag: number) {\r\n        this.soundVolume = flag;\r\n    }\r\n\r\n    openMusic() {\r\n        this.setMusicVolume(0.8);\r\n        // configuration.instance.setGlobalData('music', 'true');\r\n    }\r\n\r\n    closeMusic() {\r\n        this.setMusicVolume(0);\r\n        // configuration.instance.setGlobalData('music', 'false');\r\n    }\r\n\r\n    openSound() {\r\n        this.setSoundVolume(1);\r\n        // configuration.instance.setGlobalData('sound', 'true');\r\n    }\r\n\r\n    closeSound() {\r\n        this.setSoundVolume(0);\r\n        // configuration.instance.setGlobalData('sound', 'false');\r\n    }\r\n}\r\n"]}