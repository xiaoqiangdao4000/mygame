{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/mjcard.ts"],"names":["_decorator","Color","Component","NodeEventType","Sprite","tween","Vec3","ccclass","property","mjcard","_interaction","scale","moveDuration","scaleDuration","start","interaction","v","normalColor","fromHEX","grayColor","sprite","color","initMj","num","spriteFrame","animType","callback","node","name","on","TOUCH_START","onTouchStart","playAnimation","x","getRandomInt","y","setPosition","setScale","t1","to","position","t2","t3","parallel","t4","call","sequence","event","console","log","target","siblingIndex","update","deltaTime","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, CCString, Color, Component, EventTouch, Node, NodeEventType, Sprite, tween, UITransform, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('mjcard')\nexport class mjcard extends Component {\n\n    @property(Sprite)\n    sprite: Sprite;\n\n    private _interaction = true;\n    scale = 1.5;\n    moveDuration = 0.5;\n    scaleDuration = 0.5;\n\n    start() {\n\n    }\n\n    public get interaction() { return this._interaction; }\n    public set interaction(v: boolean) {\n        this._interaction = v;\n        let normalColor = new Color();\n        normalColor.fromHEX('#FFFFFF');\n        let grayColor = new Color();\n        grayColor.fromHEX('#AC8D8D');\n        this.sprite.color = v ? normalColor : grayColor;\n    }\n\n    initMj(num, spriteFrame, animType, callback) {\n        this.node.name = 'mj_' + num;\n        this.sprite.spriteFrame = spriteFrame;\n        this._interaction = true;\n        this.node.on(NodeEventType.TOUCH_START, this.onTouchStart);\n        this.playAnimation(animType, callback);\n    }\n\n    //播放发牌动画\n    playAnimation(animType, callback) {\n        var x = this.getRandomInt(-300, 300);\n        var y = this.getRandomInt(-200, 400);\n        this.node.setPosition(0, 0);\n        this.node.setScale(0, 0);\n\n        //同事移动，缩放\n        if (animType == 1) {\n            let t1 = tween(this.node).to(this.moveDuration, { position: new Vec3(x, y, 0) })\n            let t2 = tween(this.node).to(this.moveDuration, { scale: new Vec3(this.scale, this.scale, 0) })\n            let t3 = tween(this.node).parallel(t1, t2);\n            let t4 = tween(this.node).call(() => { callback(); });\n            tween(this.node).sequence(t3, t4).start();\n            //tween(this.node).parallel(t1, t2).start();\n            return;\n        }\n        else if (animType == 2)  //设置位置然后，缩放出现\n        {\n            this.node.setPosition(x, y);\n            let t1 = tween(this.node).to(this.scaleDuration, { scale: new Vec3(this.scale, this.scale, 0) })\n            let t4 = tween(this.node).call(() => { callback(); });\n            tween(this.node).sequence(t1, t4).start();\n        }\n\n    }\n\n    onTouchStart(event: EventTouch) {\n        console.log('bbbbb = ', event.target.siblingIndex);\n        // console.log(event.getLocation());  // Location on screen space\n        // console.log(event.getUILocation());  // Location on UI space\n        //this.getClickCurMj(event.target);\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n}\n\n"]}