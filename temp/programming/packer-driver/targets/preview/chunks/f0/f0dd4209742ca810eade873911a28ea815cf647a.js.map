{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/tools.ts"],"names":["tools","AudioClip","error","Prefab","AudioManager","resMgr","SOUND","getRandomInt","min","max","Math","floor","random","getRandomMjIndex","randomInt","playSound","sound","start_sound","audioClip","Instance","getAsset","inst","playOneShot","click_sound","gameLost_sound","gameWin_sound","sendCard_sound","time_sound","clear_sound","back_sound","saveLevel","cardBackTotal","level","cardBackNow","localStorage","setItem","toString","getLevel","getItem","Number","randomMjAnim","type","animType","picNum","resPkg","prefabs","assetType","urls"],"mappings":"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","sourcesContent":["import { Asset, AudioClip, Constructor, Enum, error, Prefab, resources } from \"cc\";\r\nimport { AudioManager } from \"./audioManager\";\r\nimport { resMgr } from \"./resMgr\";\r\nexport type AssetType<T = Asset> = Constructor<T>;\r\nexport type LoadCompleteCallback<T> = (error: Error | null, asset: T) => void;\r\nexport enum SOUND {\r\n    start_sound,\r\n    click_sound,\r\n    gameLost_sound,\r\n    gameWin_sound,\r\n    sendCard_sound,\r\n    time_sound,\r\n    clear_sound,\r\n    back_sound,\r\n}\r\n\r\nexport default class tools {\r\n\r\n    static level: number = 1;       //当前游戏关卡等级\r\n    static picNum: number = 18;      //图片数量 level * picNum\r\n    static animType: number = 2;     //发牌动画 1同时移动，缩放  2缩放出现\r\n    static cardBackTotal: number = 0;      //背面牌数量\r\n    static cardBackNow:number = 0;\r\n\r\n    static resPkg = {\r\n        //gui: {\r\n        //     assetType: SpriteFrame,\r\n        //     urls: [\r\n        //         'btn_bg/spriteFrame',\r\n        //         'frame/spriteFrame',\r\n        //         'game_bg/spriteFrame',\r\n        //         'mj_card/spriteFrame',\r\n        //     ],\r\n        // },\r\n\r\n        prefabs: {\r\n            assetType: Prefab,\r\n            urls: [\r\n                'gameStart',\r\n                'mjcard',\r\n                'gameNode',\r\n            ],\r\n        },\r\n\r\n        sound: {\r\n            assetType: AudioClip,\r\n            urls: [\r\n                'back',\r\n                'click',\r\n                'gameLost',\r\n                'gameStart',\r\n                'gameWin',\r\n                'sendCard',\r\n                'time',\r\n                'clear',\r\n            ],\r\n        },\r\n    };\r\n\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    static getRandomMjIndex() {\r\n        let randomInt = tools.getRandomInt(1, 34);\r\n        return randomInt;\r\n    }\r\n\r\n    static playSound(sound) {\r\n        if (sound == SOUND.start_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameStart') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.click_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'click') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameLost_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameLost') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameWin_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameWin') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.sendCard_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'sendCard') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.time_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'time') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.clear_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'clear') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.back_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'back') as AudioClip;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n    }\r\n\r\n    static saveLevel() {\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        localStorage.setItem('level', tools.level.toString());\r\n    }\r\n\r\n    static getLevel() {\r\n        let level = localStorage.getItem('level');\r\n        tools.level = Number(level);\r\n        if (tools.level == 0) tools.level = 1;\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        return tools.level;\r\n    }\r\n\r\n    static randomMjAnim() {\r\n        let type = 1;\r\n        if (tools.level % 2 == 0) type = 1;\r\n        else type = 2\r\n\r\n        tools.animType = type;\r\n    }\r\n}"]}