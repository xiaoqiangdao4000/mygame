{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/tools.ts"],"names":["tools","AudioClip","Prefab","AudioMgr","resMgr","SOUND","GAMESTATE","GAMETIPS","savaData","localStorage","setItem","xiPai","toString","cheHui","addTime","touShi","getData","Number","getItem","getRandomInt","min","max","Math","floor","random","getRandomMjIndex","randomInt","playSound","sound","start_sound","audioClip","Instance","getAsset","playEffect","click_sound","gameLost_sound","gameWin_sound","sendCard_sound","playEffectCanBreak","time_sound","clear_sound","back_sound","playBgm","saveLevel","cardBackTotal","level","cardBackNow","getLevel","randomMjAnim","type","animType","picNum","music","resPkg","prefabs","assetType","urls"],"mappings":"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","sourcesContent":["import { Asset, AudioClip, Constructor, Prefab } from \"cc\";\r\nimport { AudioMgr } from \"./audioManager\";\r\nimport { resMgr } from \"./resMgr\";\r\nexport type AssetType<T = Asset> = Constructor<T>;\r\nexport type LoadCompleteCallback<T> = (error: Error | null, asset: T) => void;\r\nexport enum SOUND {\r\n    start_sound,\r\n    click_sound,\r\n    gameLost_sound,\r\n    gameWin_sound,\r\n    sendCard_sound,\r\n    time_sound,\r\n    clear_sound,\r\n    back_sound,\r\n}\r\n\r\nexport enum GAMESTATE {\r\n    game_start,\r\n    game_inGame,\r\n    game_end,\r\n}\r\n\r\nexport enum GAMETIPS {\r\n    game_success,\r\n    gmae_fail,\r\n    game_hide,\r\n    game_rest,\r\n}\r\n\r\nexport default class tools {\r\n\r\n    static level: number = 1;       //当前游戏关卡等级\r\n    static picNum: number = 18;      //图片数量 level * picNum\r\n    static animType: number = 2;     //发牌动画 1同时移动，缩放  2缩放出现\r\n    static cardBackTotal: number = 0;      //背面牌数量\r\n    static cardBackNow: number = 0;\r\n\r\n    static music = true;    //背景音乐\r\n    static xiPai = 3;       //洗牌次数\r\n    static cheHui = 3;      //撤回次数\r\n    static addTime = 30;    //加时30s\r\n    static touShi = 3;      //透视\r\n\r\n    static resPkg = {\r\n        //gui: {\r\n        //     assetType: SpriteFrame,\r\n        //     urls: [\r\n        //         'btn_bg/spriteFrame',\r\n        //         'frame/spriteFrame',\r\n        //         'game_bg/spriteFrame',\r\n        //         'mj_card/spriteFrame',\r\n        //     ],\r\n        // },\r\n\r\n        prefabs: {\r\n            assetType: Prefab,\r\n            urls: [\r\n                'gameStart',\r\n                'mjcard',\r\n                'gameNode',\r\n            ],\r\n        },\r\n\r\n        sound: {\r\n            assetType: AudioClip,\r\n            urls: [\r\n                'back',\r\n                'click',\r\n                'gameLost',\r\n                'gameStart',\r\n                'gameWin',\r\n                'sendCard',\r\n                'time',\r\n                'clear',\r\n            ],\r\n        },\r\n    };\r\n\r\n    static savaData() {\r\n        localStorage.setItem('xiPai', tools.xiPai.toString());\r\n        localStorage.setItem('cheHui', tools.cheHui.toString());\r\n        localStorage.setItem('addTime', tools.addTime.toString());\r\n        localStorage.setItem('touShi', tools.touShi.toString());\r\n    }\r\n\r\n    static getData() {\r\n        let xiPai = Number(localStorage.getItem('xiPai'));\r\n        let cheHui = Number(localStorage.getItem('cheHui'));\r\n        let addTime = Number(localStorage.getItem('addTime'));\r\n        let touShi = Number(localStorage.getItem('touShi'));\r\n        if (xiPai === 0 && cheHui === 0 && addTime == 0 && touShi == 0) {\r\n            tools.xiPai = 3;\r\n            tools.cheHui = 3;\r\n            tools.addTime = 30;\r\n            tools.touShi = 3;\r\n            return;\r\n        }\r\n        tools.xiPai = xiPai;\r\n        tools.cheHui = cheHui;\r\n        tools.addTime = addTime;\r\n        tools.touShi = touShi;\r\n\r\n    }\r\n\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    static getRandomMjIndex() {\r\n        let randomInt = tools.getRandomInt(1, 34);\r\n        return randomInt;\r\n    }\r\n\r\n    static playSound(sound) {\r\n        if (sound == SOUND.start_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameStart') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.click_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'click') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameLost_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameLost') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameWin_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameWin') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.sendCard_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'sendCard') as AudioClip;\r\n            AudioMgr.Instance.playEffectCanBreak(audioClip);\r\n        }\r\n        else if (sound == SOUND.time_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'time') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.clear_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'clear') as AudioClip;\r\n            AudioMgr.Instance.playEffect(audioClip);\r\n        }\r\n        else if (sound == SOUND.back_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'back') as AudioClip;\r\n            AudioMgr.Instance.playBgm(audioClip);\r\n        }\r\n    }\r\n\r\n    static saveLevel() {\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        localStorage.setItem('level', tools.level.toString());\r\n    }\r\n\r\n    static getLevel() {\r\n        // tools.level = 1;\r\n        // return 1;\r\n        let level = localStorage.getItem('level');\r\n        tools.level = Number(level);\r\n        if (tools.level == 0) tools.level = 1;\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        return tools.level;\r\n    }\r\n\r\n    static randomMjAnim() {\r\n        let type = 1;\r\n        if (tools.level % 2 == 0) type = 1;\r\n        else type = 2\r\n\r\n        tools.animType = type;\r\n    }\r\n}"]}