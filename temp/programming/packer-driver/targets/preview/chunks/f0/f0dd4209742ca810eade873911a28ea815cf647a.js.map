{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/tools.ts"],"names":["tools","AudioClip","error","Prefab","AudioManager","resMgr","SOUND","getRandomInt","min","max","Math","floor","random","getRandomMjIndex","randomInt","playSound","sound","start_sound","audioClip","Instance","getAsset","inst","audioSource","loop","play","click_sound","playOneShot","gameLost_sound","gameWin_sound","sendCard_sound","time_sound","clear_sound","back_sound","saveLevel","cardBackTotal","level","cardBackNow","localStorage","setItem","toString","getLevel","getItem","Number","randomMjAnim","type","animType","picNum","music","xiPai","resPkg","prefabs","assetType","urls"],"mappings":"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","sourcesContent":["import { Asset, AudioClip, Constructor, Enum, error, Prefab, resources } from \"cc\";\r\nimport { AudioManager } from \"./audioManager\";\r\nimport { resMgr } from \"./resMgr\";\r\nexport type AssetType<T = Asset> = Constructor<T>;\r\nexport type LoadCompleteCallback<T> = (error: Error | null, asset: T) => void;\r\nexport enum SOUND {\r\n    start_sound,\r\n    click_sound,\r\n    gameLost_sound,\r\n    gameWin_sound,\r\n    sendCard_sound,\r\n    time_sound,\r\n    clear_sound,\r\n    back_sound,\r\n}\r\n\r\nexport default class tools {\r\n\r\n    static level: number = 1;       //当前游戏关卡等级\r\n    static picNum: number = 18;      //图片数量 level * picNum\r\n    static animType: number = 2;     //发牌动画 1同时移动，缩放  2缩放出现\r\n    static cardBackTotal: number = 0;      //背面牌数量\r\n    static cardBackNow: number = 0;\r\n\r\n    static music = true;    //背景音乐\r\n    static xiPai = 1;       //洗牌次数\r\n\r\n    static resPkg = {\r\n        //gui: {\r\n        //     assetType: SpriteFrame,\r\n        //     urls: [\r\n        //         'btn_bg/spriteFrame',\r\n        //         'frame/spriteFrame',\r\n        //         'game_bg/spriteFrame',\r\n        //         'mj_card/spriteFrame',\r\n        //     ],\r\n        // },\r\n\r\n        prefabs: {\r\n            assetType: Prefab,\r\n            urls: [\r\n                'gameStart',\r\n                'mjcard',\r\n                'gameNode',\r\n            ],\r\n        },\r\n\r\n        sound: {\r\n            assetType: AudioClip,\r\n            urls: [\r\n                'back',\r\n                'click',\r\n                'gameLost',\r\n                'gameStart',\r\n                'gameWin',\r\n                'sendCard',\r\n                'time',\r\n                'clear',\r\n            ],\r\n        },\r\n    };\r\n\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    static getRandomMjIndex() {\r\n        let randomInt = tools.getRandomInt(1, 34);\r\n        return randomInt;\r\n    }\r\n\r\n    static playSound(sound) {\r\n        if (sound == SOUND.start_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameStart') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = true;\r\n            AudioManager.inst.play(audioClip);\r\n        }\r\n        else if (sound == SOUND.click_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'click') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameLost_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameLost') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.gameWin_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'gameWin') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.sendCard_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'sendCard') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.time_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'time') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.clear_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'clear') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n        else if (sound == SOUND.back_sound) {\r\n            let audioClip = resMgr.Instance.getAsset('sound', 'back') as AudioClip;\r\n            AudioManager.inst.audioSource.loop = false;\r\n            AudioManager.inst.playOneShot(audioClip);\r\n        }\r\n    }\r\n\r\n    static saveLevel() {\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        localStorage.setItem('level', tools.level.toString());\r\n    }\r\n\r\n    static getLevel() {\r\n        let level = localStorage.getItem('level');\r\n        tools.level = Number(level);\r\n        if (tools.level == 0) tools.level = 1;\r\n        tools.cardBackTotal = tools.level;\r\n        tools.cardBackNow = 0;\r\n        return tools.level;\r\n    }\r\n\r\n    static randomMjAnim() {\r\n        let type = 1;\r\n        if (tools.level % 2 == 0) type = 1;\r\n        else type = 2\r\n\r\n        tools.animType = type;\r\n    }\r\n}"]}