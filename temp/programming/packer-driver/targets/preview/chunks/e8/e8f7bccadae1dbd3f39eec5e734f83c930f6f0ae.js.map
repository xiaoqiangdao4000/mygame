{"version":3,"sources":["file:///Users/zzx/Desktop/mygame/assets/scripts/OpenContext.ts"],"names":["_decorator","Component","WECHAT","tools","ccclass","property","OpenContext","start","onEnable","setUserLevel","console","log","openContext","wx","getOpenDataContext","testLevel","getLevel","window","setUserCloudStorage","KVDataList","key","value","String","success","res","postMessage","type","event","fail","onBtnClick","data","node","active","update","deltaTime","_reportUserLevel","level","listener","target","apply","err"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,M,UAAAA,M;;AACFC,MAAAA,K;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;6BAGjBM,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb,SACiCL,SADjC,CAC2C;AAEvC;AAEAM,QAAAA,KAAK,GAAG,CACJ;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACH;;AAESC,QAAAA,QAAQ,GAAS;AACvB,eAAKC,YAAL;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AAEDF,QAAAA,YAAY,GAAG;AACX,cAAIP,MAAJ,EAAY;AACR;AACA,gBAAIU,WAAW,GAAGC,EAAE,CAACC,kBAAH,EAAlB,CAFQ,CAEmC;;AAC3C,gBAAIC,SAAS,GAAG;AAAA;AAAA,gCAAMC,QAAN,EAAhB,CAHQ,CAG0B;AAClC;;AAEAC,YAAAA,MAAM,CAAC,IAAD,CAAN,CAAaC,mBAAb,CAAiC;AAC7BC,cAAAA,UAAU,EAAE,CAAC;AAAEC,gBAAAA,GAAG,EAAE,OAAP;AAAgBC,gBAAAA,KAAK,EAAEC,MAAM,CAACP,SAAD;AAA7B,eAAD,CADiB;AAE7BQ,cAAAA,OAAO,EAAEC,GAAG,IAAI;AACZd,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ,EAFY,CAGZ;;AAEAP,gBAAAA,MAAM,CAAC,IAAD,CAAN,CAAaQ,WAAb,CAAyB;AAAEC,kBAAAA,IAAI,EAAE,QAAR;AAAkBC,kBAAAA,KAAK,EAAE;AAAzB,iBAAzB,EALY,CAMZ;AACA;AACA;AACH,eAX4B;AAY7BC,cAAAA,IAAI,EAAEJ,GAAG,IAAI;AACTd,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH;AAf4B,aAAjC;AAiBH;AACJ,SApDsC,CAsDvC;;;AACAK,QAAAA,UAAU,CAACF,KAAD,EAAQG,IAAR,EAAc;AACpB,cAAIA,IAAI,IAAI,OAAZ,EAAqB;AACjB,iBAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB,CADiB,CAEjB;AACH,WAJmB,CAKpB;AACA;AACA;;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEOC,QAAAA,gBAAgB,CAACC,KAAD,EAAgBC,QAAhB,EAAqCC,MAArC,EAAmD;AACvE,cAAI,CAACpC,MAAL,EAAa;AACT;AACH,WAHsE,CAKvE;;;AACAW,UAAAA,EAAE,CAACK,mBAAH,CAAuB;AAAE;AACrBC,YAAAA,UAAU,EAAE,CACR;AAAEC,cAAAA,GAAG,EAAE,OAAP;AAAgBC,cAAAA,KAAK,OAAKe;AAA1B,aADQ,CADO;AAKnBb,YAAAA,OAAO,EAAE,MAAM;AACXc,cAAAA,QAAQ,QAAR,IAAAA,QAAQ,CAAEE,KAAV,CAAgBD,MAAhB;AACH,aAPkB;AASnBV,YAAAA,IAAI,EAAGY,GAAD,IAAc;AAChB9B,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC6B,GAAnC;AACH;AAXkB,WAAvB;AAaH;;AAxFsC,O","sourcesContent":["import { _decorator, Component, Node, sys } from 'cc';\nimport { WECHAT } from 'cc/env';\nimport tools from './tools';\nconst { ccclass, property } = _decorator;\n\n@ccclass('OpenContext')\nexport class OpenContext extends Component {\n\n    // private _openContext: any; // 子域对象\n\n    start() {\n        // if (WECHAT) {\n        //     // @ts-ignore\n        //     this._openContext = wx.getOpenDataContext();\n        // }\n\n        // if (WECHAT) { //判断微信环境\n        //     // @ts-ignore\n        //     this._openContext = wx.getOpenDataContext(); // 调用微信接口获取子域句柄，使用时需要检查\n\n        //     let testLevel = 5; // 测试数据\n\n        //     this._reportUserLevel(testLevel, () => {\n        //         this._openContext.postMessage({ type: 'engine', event: 'level' }); // level为自定义key，如果没有特殊需求，建议直接用。否则你的变动比较大，调整wx-sub-project/index.js的对应的key和this._reportUserLevel的key都需要对齐\n        //     });\n        // }\n    }\n\n    protected onEnable(): void {\n        this.setUserLevel();\n        console.log('上报请求排行榜数据.....');\n    }\n\n    setUserLevel() {\n        if (WECHAT) {\n            // @ts-ignore\n            var openContext = wx.getOpenDataContext(); // 调用微信接口获取子域句柄，使用时需要检查\n            let testLevel = tools.getLevel(); // 测试数据\n            //  this._openContext.postMessage({ type: 'engine', event: 'level' });\n\n            window['wx'].setUserCloudStorage({\n                KVDataList: [{ key: 'level', value: String(testLevel) }],\n                success: res => {\n                    console.log('上报数据成功：');\n                    console.log(res);\n                    // 让子域更新当前用户的最高分，因为主域无法得到getUserCloadStorage;\n\n                    window['wx'].postMessage({ type: 'engine', event: 'level' });\n                    // openDataContext.postMessage({\n                    //     type: 'updateMaxScore',\n                    // });\n                },\n                fail: res => {\n                    console.log('上报数据失败：');\n                    console.log(res);\n                }\n            });\n        }\n    }\n\n    //开始按钮\n    onBtnClick(event, data) {\n        if (data == \"close\") {\n            this.node.active = false;\n            //this.setUserLevel();\n        }\n        // else if (data == 'rankBtn') {\n        //     this.setUserLevel();\n        // }\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    private _reportUserLevel(level: number, listener?: Function, target?: any) {\n        if (!WECHAT) {\n            return;\n        }\n\n        // @ts-ignore\n        wx.setUserCloudStorage({ //调用微信接口上报关卡等级信息，用于好友圈排行\n            KVDataList: [\n                { key: 'level', value: `${level}` }\n            ],\n\n            success: () => {\n                listener?.apply(target);\n            },\n\n            fail: (err: any) => {\n                console.log('report level error:', err);\n            }\n        });\n    }\n}\n\n\n"]}