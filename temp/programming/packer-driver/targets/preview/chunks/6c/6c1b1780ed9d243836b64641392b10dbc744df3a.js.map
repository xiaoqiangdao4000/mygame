{"version":3,"sources":["file:///C:/Users/zzx/Desktop/myGameMj/assets/scripts/main.ts"],"names":["_decorator","AudioSource","Component","SpriteAtlas","audioManager","ccclass","property","main","getInstant","instant","start","audioSource","node","getComponent","instance","init","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;AACrDC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,UAGHC,QAAQ,CAACH,WAAD,C,sCAHb,MACaI,IADb,SAC0BL,SAD1B,CACoC;AAAA;AAAA;;AAAA;AAAA;;AAOf,eAAVM,UAAU,GAAG;AAChB,cAAID,IAAI,CAACE,OAAL,IAAgB,IAApB,EAA0B;AACtBF,YAAAA,IAAI,CAACE,OAAL,GAAe,IAAIF,IAAJ,EAAf;AACH;;AACD,iBAAOA,IAAI,CAACE,OAAZ;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJH,UAAAA,IAAI,CAACE,OAAL,GAAe,IAAf;AACA,cAAIE,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBZ,WAAvB,CAAlB;AACA;AAAA;AAAA,4CAAaa,QAAb,CAAsBC,IAAtB,CAA2BJ,WAA3B,EAHI,CAKJ;AACA;AAEA;AACA;AACH;;AAEDK,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA5B+B,O,UAKzBR,O,GAAU,I;;;;;iBAFM,I","sourcesContent":["import { _decorator, AudioClip, AudioSource, Component, Node, SpriteAtlas } from 'cc';\r\nimport { audioManager } from './audioManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('main')\r\nexport class main extends Component {\r\n\r\n    @property(SpriteAtlas)\r\n    mjAtlas: SpriteAtlas = null;\r\n\r\n    static instant = null;\r\n\r\n    static getInstant() {\r\n        if (main.instant == null) {\r\n            main.instant = new main();\r\n        }\r\n        return main.instant;\r\n    }\r\n\r\n    start() {\r\n        main.instant = this;\r\n        let audioSource = this.node.getComponent(AudioSource);\r\n        audioManager.instance.init(audioSource);\r\n\r\n        // AudioSource.prototype.clip = this.gameBackSound;\r\n        // AudioSource.prototype.play();\r\n\r\n        // gameBackSound.AudioSource.prototype.play();\r\n        // this.current = this.gameBackSound.play(this.gameBackSound, false, 1);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}