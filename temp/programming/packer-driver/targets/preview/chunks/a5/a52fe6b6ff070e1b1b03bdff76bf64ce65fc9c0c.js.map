{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/mjcard.ts"],"names":["_decorator","Color","Component","Node","Sprite","SpriteAtlas","tween","Vec3","tools","ccclass","property","mjcard","_interaction","cardId","scale","moveDuration","scaleDuration","sprFrame","cardBackFrame","start","node","on","EventType","TOUCH_START","onTouchStart","interaction","v","normalColor","fromHEX","grayColor","sprite","color","initMj","num","cardid","animType","callback","name","mjAtlas","getSpriteFrame","cardBackNow","cardBackTotal","rand","getRandomInt","spriteFrame","playAnimation","restCard","x","y","setPosition","setScale","t1","to","position","t2","t3","parallel","t4","call","sequence","event","console","log","target","parent","emit","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Atlas, Color, Component, EventTouch, Node, Sprite, SpriteAtlas, SpriteFrame, tween, Vec3 } from 'cc';\r\nimport tools from './tools';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('mjcard')\r\nexport class mjcard extends Component {\r\n\r\n    @property(Sprite)\r\n    sprite: Sprite;\r\n\r\n    @property(SpriteAtlas)\r\n    mjAtlas: SpriteAtlas\r\n\r\n    private _interaction = true;\r\n    cardId = 0;\r\n    scale = 1.5;\r\n    moveDuration = 0.5;\r\n    scaleDuration = 0.5;\r\n    sprFrame: SpriteFrame = null;\r\n    cardBackFrame: SpriteFrame = null;\r\n\r\n    start() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    public get interaction() { return this._interaction; }\r\n    public set interaction(v: boolean) {\r\n        this._interaction = v;\r\n        let normalColor = new Color();\r\n        normalColor.fromHEX('#FFFFFF');\r\n        let grayColor = new Color();\r\n        grayColor.fromHEX('#AC8D8D');\r\n        this.sprite.color = v ? normalColor : grayColor;\r\n    }\r\n\r\n    initMj(num, cardid, animType, callback) {\r\n        this.node.name = 'mj_' + num;\r\n        this.cardId = cardid;\r\n        this.sprFrame = this.mjAtlas.getSpriteFrame('mj_' + num);\r\n        if (tools.cardBackNow < tools.cardBackTotal) {\r\n            let rand = tools.getRandomInt(1, 3);\r\n            if (rand == 1) {\r\n                tools.cardBackNow++;\r\n                this.cardBackFrame = this.mjAtlas.getSpriteFrame('mj_35');\r\n                this.sprite.spriteFrame = this.cardBackFrame;\r\n            }\r\n            else {\r\n                this.sprite.spriteFrame = this.sprFrame;\r\n            }\r\n        }\r\n        else {\r\n            this.sprite.spriteFrame = this.sprFrame;\r\n        }\r\n        this.interaction = false;\r\n        this.playAnimation(animType, callback);\r\n    }\r\n\r\n    restCard() {\r\n        if (this.cardBackFrame != null) {\r\n            this.sprite.spriteFrame = this.sprFrame;\r\n        }\r\n    }\r\n\r\n    //播放发牌动画\r\n    playAnimation(animType, callback) {\r\n        var x = tools.getRandomInt(-300, 300);\r\n        var y = tools.getRandomInt(-200, 400);\r\n        // var x = tools.getRandomInt(-30, 30);\r\n        // var y = tools.getRandomInt(-20, 40);\r\n        this.node.setPosition(0, 0);\r\n        this.node.setScale(0, 0);\r\n        //同时移动，缩放\r\n        if (animType == 1) {\r\n            let t1 = tween(this.node).to(this.moveDuration, { position: new Vec3(x, y, 0) })\r\n            let t2 = tween(this.node).to(this.moveDuration, { scale: new Vec3(this.scale, this.scale, 1) })\r\n            let t3 = tween(this.node).parallel(t1, t2);\r\n            let t4 = tween(this.node).call(() => {\r\n                callback();\r\n            });\r\n            tween(this.node).sequence(t3, t4).start();\r\n            //tween(this.node).parallel(t1, t2).start();\r\n            return;\r\n        }\r\n        else if (animType == 2)  //设置位置然后，缩放出现\r\n        {\r\n            this.node.setPosition(x, y);\r\n            let t1 = tween(this.node).to(this.scaleDuration, { scale: new Vec3(this.scale, this.scale, 1) })\r\n            let t2 = tween(this.node).call(() => {\r\n                callback();\r\n            });\r\n            tween(this.node).sequence(t1, t2).start();\r\n        }\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        if (this._interaction == false) {\r\n            console.log('不可点击的麻将 = ', event.target.name);\r\n        }\r\n        else {\r\n            console.log('点击麻将 = ', event.target.name);\r\n            this.node.parent.emit('clickmj', event.target);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}