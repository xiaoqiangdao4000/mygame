{"version":3,"sources":["file:///C:/Users/zzx/Desktop/mygame/assets/scripts/mjcard.ts"],"names":["_decorator","Color","Component","Node","Sprite","tween","Vec3","tools","ccclass","property","mjcard","_interaction","cardId","scale","moveDuration","scaleDuration","start","node","on","EventType","TOUCH_START","onTouchStart","interaction","v","normalColor","fromHEX","grayColor","sprite","color","initMj","num","cardid","spriteFrame","animType","callback","name","playAnimation","x","getRandomInt","y","setPosition","setScale","t1","to","position","t2","t3","parallel","t4","call","sequence","event","console","log","target","parent","emit","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, EventTouch, Node, Sprite, tween, Vec3 } from 'cc';\r\nimport tools from './tools';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('mjcard')\r\nexport class mjcard extends Component {\r\n\r\n    @property(Sprite)\r\n    sprite: Sprite;\r\n\r\n    private _interaction = true;\r\n    cardId = 0;\r\n    scale = 1.5;\r\n    moveDuration = 0.5;\r\n    scaleDuration = 0.5;\r\n\r\n    start() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    public get interaction() { return this._interaction; }\r\n    public set interaction(v: boolean) {\r\n        this._interaction = v;\r\n        let normalColor = new Color();\r\n        normalColor.fromHEX('#FFFFFF');\r\n        let grayColor = new Color();\r\n        grayColor.fromHEX('#AC8D8D');\r\n        this.sprite.color = v ? normalColor : grayColor;\r\n    }\r\n\r\n    initMj(num, cardid, spriteFrame, animType, callback) {\r\n        this.node.name = 'mj_' + num;\r\n        this.cardId = cardid;\r\n        this.sprite.spriteFrame = spriteFrame;\r\n        this.interaction = false;\r\n        this.playAnimation(animType, callback);\r\n    }\r\n\r\n    //播放发牌动画\r\n    playAnimation(animType, callback) {\r\n        var x = tools.getRandomInt(-300, 300);\r\n        var y = tools.getRandomInt(-200, 400);\r\n        // var x = tools.getRandomInt(-30, 30);\r\n        // var y = tools.getRandomInt(-20, 40);\r\n        this.node.setPosition(0, 0);\r\n        this.node.setScale(0, 0);\r\n        //同时移动，缩放\r\n        if (animType == 1) {\r\n            let t1 = tween(this.node).to(this.moveDuration, { position: new Vec3(x, y, 0) })\r\n            let t2 = tween(this.node).to(this.moveDuration, { scale: new Vec3(this.scale, this.scale, 1) })\r\n            let t3 = tween(this.node).parallel(t1, t2);\r\n            let t4 = tween(this.node).call(() => {\r\n                callback();\r\n            });\r\n            tween(this.node).sequence(t3, t4).start();\r\n            //tween(this.node).parallel(t1, t2).start();\r\n            return;\r\n        }\r\n        else if (animType == 2)  //设置位置然后，缩放出现\r\n        {\r\n            this.node.setPosition(x, y);\r\n            let t1 = tween(this.node).to(this.scaleDuration, { scale: new Vec3(this.scale, this.scale, 1) })\r\n            let t2 = tween(this.node).call(() => {\r\n                callback();\r\n            });\r\n            tween(this.node).sequence(t1, t2).start();\r\n        }\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        if (this._interaction == false) {\r\n            console.log('不可点击的麻将 = ', event.target.name);\r\n        }\r\n        else {\r\n            console.log('点击麻将 = ', event.target.name);\r\n            this.node.parent.emit('clickmj', event.target);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}